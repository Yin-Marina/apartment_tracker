name: Update and Deploy to GitHub Pages

on:
  # Runs at 00:00 every 3rd day
  schedule:
    - cron: '0 0 */3 * *'

  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to manually run the workflow from the Actions tab in GitHub
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 4: Run the data extraction script
      - name: Run script to update data
        run: python script.py

      # Step 5: Commit and push the data.json and index.html to GitHub
      - name: Commit and push changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add ./data/data.json
          git add ./doc/index.html
          git commit -m "Update data.json and regenerate index.html"
          git push origin main

      # Step 6: Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 7: Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
            path: './doc'

      # Step 8: Deploy to GitHub Pages     
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

